import { positionFromCenter } from './utils/canvas.mjs';

export default class Firework {
  constructor(data, context) {
    /**
     * @description The canvas context
     * @type {CanvasRenderingContext2D}
     */
    this.context = context;

    /**
     * @description Launch point
     * @type {{
     *   x: number,
     *   y: number
     * }}
     */
    this.position = positionFromCenter(data.position);

    /**
     * @description Time counter in milliseconds
     * @type {number}
     */
    this.counter = data.duration;

    /**
     * @description The color of the particles in a 24 bit RGB format (8 bits per colour)
     * @type {string}
     */
    this.color = data.colour.replace('0x', '#');

    /**
     * @description Size in pixels
     * @type {number}
     */
    this.size = 14;

    /**
     * @description Contains the particles generated by this firework
     * @type {Particle[]}
     */
    this.particles = [];
  }

  /**
   * @description Check if the firework still available
   * @returns {boolean}
   */
  exists() {
    return this.counter > 0 || this.particles.length > 0;
  }

  /**
   * @description Update firework state
   * @param {number} timestampPassed Diff time from last frame in milliseconds
   */
  update(timestampPassed) {
    this.counter -= timestampPassed;
  }

  /**
   * Renders the firework
   * @param {number} time Diff time from last frame in milliseconds
   */
  render(time) {
    if (!this.exists()) {
      return;
    }

    this.update(time);

    if (this.counter > 0) {
      createPoint(this.context, this.position.x, this.position.y, this.size / 2, this.color);
    }
  }
}
